<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <style>
        :root {
            --primary: hsl(220, 90%, 56%);
            --secondary: hsl(269, 82%, 62%);
            --accent: hsl(347, 90%, 66%);
            --background: hsl(240, 20%, 99%);
            --text: hsl(222, 84%, 13%);
        }

        body {
            background: linear-gradient(135deg, hsl(240, 20%, 97%) 0%, hsl(220, 40%, 97%) 100%);
            font-family: 'Inter', system-ui, sans-serif;
            min-height: 100vh;
            margin: 0;
            display: grid;
            place-items: center;
            color: var(--text);
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            width: min(90%, 700px);
            padding: 2.5rem;
            border-radius: 1.5rem;
            box-shadow: 0 1.5rem 4rem -1rem rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            margin: 2rem;
            transform: translateY(0);
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-1rem); }
        }

        h1 {
            font-size: 2.2rem;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin-bottom: 2.5rem;
            text-align: center;
        }

        .form-group {
            margin-bottom: 2rem;
            position: relative;
        }

        label {
            display: block;
            font-weight: 600;
            margin-bottom: 0.8rem;
            font-size: 0.95rem;
            color: hsl(222, 30%, 35%);
            padding-left: 0.5rem;
        }

        input, textarea {
            width: 100%;
            padding: 1rem 1.2rem;
            border: 2px solid hsl(220, 30%, 90%);
            border-radius: 0.8rem;
            font-size: 1rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            background: rgba(255, 255, 255, 0.8);
        }

        .image-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 1.2rem;
            margin: 1.5rem 0;
        }

        .image-item {
            position: relative;
            overflow: hidden;
            border-radius: 0.8rem;
            transition: transform 0.3s ease;
        }

        .image-item:hover {
            transform: translateY(-3px);
        }

        .image-item img {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-radius: 0.8rem;
            border: 2px solid white;
            box-shadow: 0 0.5rem 1.5rem -0.5rem rgba(0, 0, 0, 0.1);
        }

        .upload-box {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 120px;
            border: 2px dashed hsl(220, 30%, 85%);
            border-radius: 0.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.5);
            flex-direction: column;
            gap: 0.5rem;
        }

        .upload-box:hover {
            border-color: var(--primary);
            background: rgba(var(--primary), 0.03);
        }

        .upload-box span {
            color: hsl(222, 30%, 60%);
            font-size: 0.9rem;
        }

        .preview-image {
            position: relative;
            height: 120px;
        }

        .preview-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 0.8rem;
        }

        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: var(--accent);
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            padding: 0;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .remove-btn:hover {
            transform: scale(1.1);
            background: hsl(347, 90%, 60%);
        }

        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
            justify-content: center;
        }

        button {
            padding: 1rem 2rem;
            border: none;
            border-radius: 0.8rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.6rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .update-btn {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            box-shadow: 0 0.5rem 1.5rem -0.5rem var(--primary);
        }

        .update-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 1rem 2rem -0.5rem rgba(var(--primary), 0.3);
        }

        .delete-btn {
            background: linear-gradient(45deg, var(--accent), hsl(347, 90%, 70%));
            color: white;
            box-shadow: 0 0.5rem 1.5rem -0.5rem var(--accent);
        }

        .delete-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 1rem 2rem -0.5rem rgba(var(--accent), 0.3);
        }

        .hidden-input {
            display: none;
        }
    </style>
</head>
<body>
  <div class="container">
    <h1>Edit Product - <%= productName %></h1>

    <form action="/seller/product/update/<%= product_id %>" method="POST" enctype="multipart/form-data">
      <div class="form-group">
        <label for="product_name">Product Name</label>
        <input type="text" name="product_name" id="product_name" value="<%= productName %>" required>
      </div>

      <div class="form-group">
        <label for="product_text">Description</label>
        <textarea name="product_text" id="product_text" rows="4" required><%= productDes %></textarea>
      </div>

      <div class="form-group">
        <label for="product_price">Price ($)</label>
        <input type="number" name="product_price" id="product_price" step="0.01" value="<%= productprice %>" required>
      </div>

      <div class="form-group">
        <label>Current Images</label>
        <div class="image-gallery">
          <% productImgs.forEach((img, index) => { %>
            <div class="image-item">
              <img src="/product_images/<%= img %>" alt="Product Image">
              <label class="delete-checkbox">
                <input type="checkbox" name="delete_imgs" value="<%= img %>">
                Delete
              </label>
            </div>
          <% }) %>
        </div>
      </div>

      <div class="form-group">
        <label>Add New Images</label>
        <div class="image-gallery" id="upload-grid">
          <label class="upload-box">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M17 8l-5-5-5 5M12 3v12"/>
            </svg>
            <span>Click or drag to upload</span>
            <input type="file" accept="image/*" multiple hidden onchange="handleFiles(event)" id="file-input">
          </label>
        </div>
        <input type="file" name="new_images[]" id="hidden-upload" multiple class="hidden-input">
      </div>

      <div class="button-group">
        <button type="submit" class="update-btn">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M20 6 9 17l-5-5"/>
          </svg>
          Update Product
        </button>
        
        <button type="submit" 
                formaction="/seller/product/delete/<%= product_id %>" 
                class="delete-btn"
                onclick="return confirm('Are you sure you want to delete this product?')">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M3 6h18M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/>
          </svg>
          Delete Product
        </button>
      </div>
    </form>
  </div>

  <script>
    const maxImages = 8;
    let uploadedFiles = [];

    function handleFiles(event) {
        const files = Array.from(event.target.files);
        if ((uploadedFiles.length + files.length) > maxImages) {
            alert(`Maximum ${maxImages} images allowed`);
            return;
        }

        files.forEach(file => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const preview = document.createElement('div');
                preview.className = 'preview-image';
                preview.innerHTML = `
                    <img src="${e.target.result}" alt="Preview">
                    <button class="remove-btn" onclick="removeImage(this)">Ã—</button>
                `;
                document.getElementById('upload-grid').insertBefore(preview, document.querySelector('.upload-box'));
                uploadedFiles.push(file);
            };
            reader.readAsDataURL(file);
        });

        updateHiddenInput();
    }

    function removeImage(btn) {
        const index = Array.from(btn.parentElement.parentElement.children).indexOf(btn.parentElement) - 1;
        uploadedFiles.splice(index, 1);
        btn.parentElement.remove();
        updateHiddenInput();
    }

    function updateHiddenInput() {
        const dataTransfer = new DataTransfer();
        uploadedFiles.forEach(file => dataTransfer.items.add(file));
        document.getElementById('hidden-upload').files = dataTransfer.files;
    }

    // Drag and drop handlers
    const uploadBox = document.querySelector('.upload-box');
    
    uploadBox.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadBox.style.borderColor = 'var(--primary)';
    });

    uploadBox.addEventListener('dragleave', () => {
        uploadBox.style.borderColor = 'hsl(220, 30%, 85%)';
    });

    uploadBox.addEventListener('drop', (e) => {
        e.preventDefault();
        uploadBox.style.borderColor = 'hsl(220, 30%, 85%)';
        const files = e.dataTransfer.files;
        handleFiles({ target: { files } });
    });
  </script>
</body>
</html>